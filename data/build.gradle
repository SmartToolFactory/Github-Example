apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Dagger Core dependencies
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
    // Dagger Android dependencies
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    // RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"

//    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okHttpVersion"

    //change base url runtime
    implementation 'me.jessyan:retrofit-url-manager:1.4.0'

    // Gson
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // Room
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    // For Kotlin use kapt instead of annotationProcessor
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$rootProject.roomVersion"


    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-3'

    // Chuck
    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'

    // **** TESTING ****

    // Dependencies for local unit tests

    /*
        Unit Tests
     */
//     (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.4.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.4.0"

    // (Optional) If you need "Parameterized Tests"
//    testImplementation "org.junit.jupiter:junit-jupiter-params:5.4.0"

    // (Optional) If you also have JUnit 4-based tests
//    testImplementation "junit:junit:4.12"
//    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.3.1"

//    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
//    testImplementation "org.robolectric:robolectric:$robolectricVersion"

    // AndroidX Test - JVM testing
//    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
//    testImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"

    // MockK
    testImplementation "io.mockk:mockk:$mockKVersion"

    // Mock Web Server
    testImplementation("com.squareup.okhttp3:mockwebserver:$mockWebServerVersion")

    /*
        Instrumented Tests
     */
    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    // MockK
    androidTestImplementation "io.mockk:mockk-android:$mockKVersion"

    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
}
